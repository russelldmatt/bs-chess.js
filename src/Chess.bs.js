// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Random = require("bs-platform/lib/js/random.js");
var ChessJs = require("chess.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");

function create(fen, _) {
  var match = typeof (window) === "undefined" ? undefined : (window);
  if (match !== undefined) {
    return new ChessJs(fen ? fen[0] : undefined);
  } else {
    return new ChessJs.Chess(fen ? fen[0] : undefined);
  }
}

var chess = create(/* None */0, /* () */0);

console.log(chess.ascii());

console.log(chess.fen());

var chess$1 = create(/* Some */["r1k4r/p2nb1p1/2b4p/1p1n1p2/2PP4/3Q1NB1/1P3PPP/R5K1 b - c3 0 19"], /* () */0);

console.log(chess$1.ascii());

function gameOver(chess) {
  return +chess.game_over();
}

console.log("hey");

console.log(chess$1.ascii());

console.log(chess$1.game_over());

console.log(chess$1.get("e8"));

console.log(chess$1.get("e1"));

function play_random_game(chess) {
  console.log("about to play random game");
  Random.self_init(/* () */0);
  var chess$1 = chess;
  while(true) {
    if (chess$1.game_over()) {
      console.log("Game over");
      return /* () */0;
    } else {
      var moves = chess$1.moves();
      var selected_move = Caml_array.caml_array_get(moves, Random.$$int(moves.length));
      var match = chess$1.move(selected_move);
      if (match == null) {
        console.log("error");
        return /* () */0;
      } else {
        console.log(chess$1.ascii());
        continue ;
        
      }
    }
  };
}

play_random_game(create(/* None */0, /* () */0));

exports.create = create;
exports.chess = chess$1;
exports.gameOver = gameOver;
exports.play_random_game = play_random_game;
/* chess Not a pure module */
